name: Xcode - Build and Analyze

on:
  push:
    branches: [ "building" ]
  pull_request:
    branches: [ "building" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Set up Xcode
        # run: xcode-select --switch /Applications/Xcode.app/Contents/Developer
      # - name: Install dependencies 
      #   run: swift package resolve
      - name: Build project
        run: xcodebuild -scheme "Net Info" -configuration Release -archivePath ./build/App.xcarchive archive

      - name: Export app
        run: xcodebuild -exportArchive -archivePath ./build/App.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath ./build

      # - name: Upload build artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app-build
      #     path: ./build # Change this path to your final app path

      # - name: Publish release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: ./build/*.app # Adjust this if the output is different
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



      # - name: Set Default Scheme
      #   run: |
      #     scheme_list=$(xcodebuild -list -json | tr -d "\n")
      #     default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
      #     echo $default | cat >default
      #     echo Using default scheme: $default
      # - name: Build
      #   env:
      #     scheme: ${{ 'default' }}
      #   run: |
      #     if [ $scheme = default ]; then scheme=$(cat default); fi
      #     if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #     file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #     xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
